{"version":3,"sources":["InfoBox.js","sortingUtil.js","Map.js","TableCountry.js","LineGraph.js","StateWise.js","Modal.js","App.js","index.js"],"names":["InfoBox","title","cases","active","isRed","total","props","Card","onClick","className","CardContent","Typography","color","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillOpacity","fillColor","radius","Math","sqrt","Popup","style","backgroundImage","flag","Map","countries","zoom","TileLayer","url","attribution","TableCountry","src","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetchData","fetch","then","response","json","length","datasets","backgroundColor","borderColor","StateWise","stateData","setStateData","getStateData","resp","actualData","console","log","statewise","state","curElem","confirmed","lastupdatedtime","Modal","closeModal","id","tabindex","role","height","width","alt","App","setCountries","setCountry","setCountryInfo","tableData","setTableDataN","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountires","setCasesType","openModal","setOpenModal","getCountriesData","name","iso2","onCountryChange","event","countryCode","target","FormControl","Select","variant","onChange","MenuItem","inRed","e","todayCases","todayRecovered","todayDeaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc23b894.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './InfoBox.css'\r\n\r\n// Coronavirus cases -> title\r\n// +20000 -> cases\r\n// 1.2M total -> total \r\n\r\nconst InfoBox = ({title,cases, active ,isRed,total, ...props}) => {\r\n    return (\r\n        <>\r\n             {/* InfoBoxes  title =\"Coronavirus cases \" */}\r\n            <Card onClick={props.onClick} className={`infoBox ${active && 'infoBoxSelected'} ${isRed && 'infoBox--Red'}`}>\r\n                <CardContent>\r\n                    {/* Title  i.e. Coronavirus cases*/}\r\n                    <Typography color=\"textSecondary\" className=\"infoBox__title\">\r\n                        {title}\r\n                    </Typography>\r\n\r\n                    {/* Number of cases +120k */}\r\n\r\n                    <h2 className={`infoBox__cases ${!isRed && 'infoBox__cases--green'}`}>{cases}</h2>\r\n\r\n                    {/* 1.2M Total  */}\r\n\r\n                    <Typography color=\"textSecondary\" className=\"infoBox__total\">\r\n                        {total}   Total \r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\nimport numeral  from 'numeral';\r\nimport { Circle, Popup } from 'react-leaflet';\r\nimport './Map.css'\r\n\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#ff74d3\",\r\n      // rgb: \"rgb(204, 16, 52)\",\r\n      // half_op: \"rgba(204, 16, 52, 0.5)\",\r\n      multiplier: 300,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      // rgb: \"rgb(125, 215, 29)\",\r\n      // half_op: \"rgba(125, 215, 29, 0.5)\",\r\n      multiplier: 400,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      // rgb: \"rgb(251, 68, 67)\",\r\n      // half_op: \"rgba(251, 68, 67, 0.5)\",\r\n      multiplier: 700,\r\n    },\r\n  };\r\n\r\nconst sortData = (data) => {\r\n    const sortedData = [...data];;\r\n\r\n     sortedData.sort((a,b) => {\r\n        if (a.cases > b.cases) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n            })\r\n            return sortedData\r\n        }\r\n        \r\n\r\nexport default sortData\r\n\r\n\r\nexport const prettyPrintStat = (stat) =>  stat ? `+${numeral(stat).format('0.0a')} `:'0';\r\n\r\n// Draw circles on the map with interactive tooltop\r\nexport const showDataOnMap  = (data, casesType=\"cases\") => (\r\n    data.map (country => (\r\n        <Circle\r\n          center= {[country.countryInfo.lat, country.countryInfo.long]}\r\n          fillOpacity={0.4}\r\n          color={casesTypeColors[casesType].hex}\r\n          fillColor={casesTypeColors[casesType].hex}\r\n          radius={\r\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n          }\r\n          >\r\n          <Popup>\r\n            <div className=\"info-container\">\r\n            <div \r\n              className=\"info-flag\"\r\n              style= {{backgroundImage: `url(${country.countryInfo.flag})`}}  \r\n            />\r\n            <div \r\n              className=\"info-name\">\r\n              {country.country}\r\n              </div>\r\n            <div  \r\n                className=\"info-confirmed\">\r\n                Cases: {numeral(country.cases).format(\"0,0\")}\r\n                </div>\r\n            <div  \r\n              className=\"info-recovered\">\r\n              Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n              </div>\r\n            <div  \r\n              className=\"info-deaths\">\r\n              Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n              </div>\r\n\r\n            </div> \r\n          </Popup>\r\n          \r\n\r\n        </Circle>\r\n    ))\r\n)","import React from 'react'\r\nimport './Map.css'\r\nimport {MapContainer as LeafletMap, TileLayer } from 'react-leaflet'\r\nimport { showDataOnMap } from './sortingUtil'\r\n\r\n\r\n\r\nconst Map = ({countries, casesType,center,zoom}) => {\r\n    return (\r\n        <div className=\"map\">\r\n            <LeafletMap center={center} zoom={zoom} >\r\n                <TileLayer\r\n                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                />\r\n                {/* Loop through countries and draw circles on screen */}\r\n                \r\n            {showDataOnMap(countries, casesType)}\r\n            </LeafletMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react'\r\nimport './Table.css';\r\n\r\n\r\nconst TableCountry =  ({  countries }) => {\r\n    return (\r\n        <div className=\"table\">\r\n        <tr className='table_country'>\r\n            <td>Flag</td>\r\n            <td >Country</td>\r\n            <td>Cases</td>\r\n        </tr>\r\n            {\r\n                countries.map((country ) => {\r\n                    return(\r\n                        <>\r\n                            <tr>\r\n                            <td className=\"first-td hide\"><img className=\"flag-table\" src= {(country.countryInfo.flag)} /></td>\r\n                                <td>{country.country}</td>\r\n                                <td><strong>{country.cases}</strong></td>\r\n                                {/* <td>{country.recovered}</td>\r\n                                <td>{country.deaths}</td> */}\r\n                            </tr>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableCountry\r\n","import React, { useEffect, useState } from 'react'\r\nimport Chart from 'chart.js/auto'\r\nimport {Line} from \"react-chartjs-2\"\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n const buildChartData = (data, casesType) => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    // data[casesType].forEach((date)\r\n        for (let date in data.cases) {\r\n            if(lastDataPoint) {\r\n            let  newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint,\r\n            };\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData\r\n};\r\n\r\n\r\nconst LineGraph = ({ casesType = \"cases\" , ...props }) => {\r\n    const [data , setData] = useState({})\r\n\r\n\r\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\n    // difference between last date - current date\r\n    // https://corona.lmao.ninja/v2/historical/all?lastdays=120\"\r\n   \r\n    useEffect(()=>{\r\n        const fetchData= async () => {\r\n         await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n            let chartData = buildChartData(data,casesType)\r\n            setData(chartData)\r\n            // console.log(chartData)\r\n        });\r\n    };\r\n    \r\n    fetchData();\r\n    },[casesType]);\r\n\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {data.length > 0  && (\r\n                <Line \r\n                    options={options}\r\n                    data={{\r\n                        datasets : [\r\n                            {\r\n                                    label: 'Daily New Cases',\r\n                                    backgroundColor:\"rgba(204,16,52,0.5)\",\r\n                                    borderColor:\"#CC1034\",\r\n                                    data : data,\r\n                            },\r\n                        ],\r\n                    }}\r\n                />\r\n            ) }\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n\r\n// {cases: {…}, deaths: {…}, recovered: {…}}\r\n// cases: {8/8/21: 203222679, 8/9/21: 203876512, 8/10/21: 204525161, 8/11/21: 205253686, 8/12/21: 205964473, …}\r\n// deaths: {8/8/21: 4294262, 8/9/21: 4302901, 8/10/21: 4314458, 8/11/21: 4324881, 8/12/21: 4335556, …}\r\n// recovered: {8/8/21: 0, 8/9/21: 0, 8/10/21: 0, 8/11/21: 0, 8/12/21: 0, …}\r\n\r\n\r\n\r\n\r\n// data[casesType].forEach((date) => {\r\n//     if(lastDataPoint) {\r\n//         const newDataPoint = {\r\n//             x: date,\r\n//             y: data[casesType][date] - lastDataPoint\r\n//         }\r\n//         chartData.push(newDataPoint)\r\n//     }\r\n//     lastDataPoint = data[casesType][date];\r\n// });\r\n// return chartData","import React, { useEffect, useState } from 'react'\r\n// import GiteIcon from '@mui/icons-material/Gite';\r\nimport './StateWise.css'\r\n\r\nconst StateWise = () => {\r\n\r\n    // https://data.covid19india.org/data.json\r\n    const[stateData, setStateData] = useState([])\r\n    \r\n    const getStateData = async  () => {\r\n        const resp = await fetch('https://data.covid19india.org/data.json');\r\n        const actualData = await resp.json()\r\n        console.log(actualData.statewise.state)\r\n        setStateData(actualData.statewise)\r\n    }\r\n\r\n    useEffect (() => {\r\n        getStateData()\r\n    },[])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='state-wise-container'>\r\n\r\n                <div className='state-heading'>\r\n                    <h1>Cases In States Of India</h1>\r\n                 </div>\r\n\r\n                <div className=\"responsive-table\">\r\n                    <table >\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th>State</th>\r\n                                <th>Confirmed</th>\r\n                                <th>Recovered</th>\r\n                                <th>Deaths</th>\r\n                                <th>Active</th>\r\n                                <th>Last Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                stateData.map((curElem,index) => {\r\n                                    return(\r\n                                        <tr key={index}>\r\n                                            <th>{curElem.state}</th>\r\n                                            <td>{curElem.confirmed}</td>\r\n                                            <td>{curElem.recovered}</td>\r\n                                            <td>{curElem.deaths}</td>\r\n                                            <td>{curElem.active}</td>\r\n                                            <td>{curElem.lastupdatedtime}</td>\r\n                                       </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StateWise\r\n\r\n","import React from 'react'\r\nimport './Modal.css'\r\n\r\nconst Modal = ({closeModal}) => {\r\n    return (\r\n       <>\r\n            <div>\r\n                           <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                             <div className=\"modal-dialog modal-dialog-scrollable\">\r\n                               <div className=\"modal-content\">\r\n                                 <div className=\"modal-header\">\r\n                                   <h5 className=\"modal-title\" id=\"exampleModalLabel\">Covid Symptoms</h5>\r\n                                   <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() =>{\r\n                                       closeModal(false)\r\n                                   }}>\r\n                                     <span aria-hidden=\"true\">&times;</span>\r\n                                   </button>\r\n                                 </div>\r\n                                 <div className=\"modal-body\">\r\n                                   <div className=\"card mb-3 covid-symptoms-card\">\r\n                                     <div className=\"covid-card-images\">\r\n                                       <div>\r\n                                         <img src=\"https://www.gstatic.com/healthricherkp/covidsymptoms/light_fever.gif\" className=\"card-img\" height=\"70\" width=\"55\" alt=\"...\"/>\r\n                                         <h5 id=\"fever\">Fever</h5>\r\n                                       </div>\r\n                                       <div>\r\n                                         <img src=\"https://www.gstatic.com/healthricherkp/covidsymptoms/light_cough.gif\" className=\"card-img\" height=\"70\" width=\"55\" alt=\"...\"/>\r\n                                         <h5>Dry cough</h5>\r\n                                       </div>\r\n                                       <div>\r\n                                         <img src=\"https://www.gstatic.com/healthricherkp/covidsymptoms/light_tiredness.gif\" className=\"card-img\" height=\"70\" width=\"55\" alt=\"...\"/>\r\n                                         <h5>Tiredness</h5>\r\n                                       </div>\r\n                                     </div>\r\n                                     <div className=\"card-body\">\r\n                                       <h5 className=\"card-title\">Covid Symptoms</h5>\r\n                                       <p className=\"card-text\">COVID-19 affects different people in different ways. Most infected people will develop mild to moderate illness and recover without hospitalization.</p>\r\n                                       <p className=\"card-text symptoms\"><small className=\"text-muted\">Most common symptoms:</small></p>\r\n                                         <ul className=\"text-muted\">\r\n                                           <li>fever</li>\r\n                                           <li>dry cough</li>\r\n                                           <li>tiredness</li>\r\n                                         </ul>\r\n                                       <p className=\"card-text symptoms\"><small className=\"text-muted\">Less common symptoms:</small></p>\r\n                                         <ul className=\"text-muted\">\r\n                                           <li>aches and pains</li>\r\n                                           <li>sore throat</li>\r\n                                           <li>headache</li>\r\n                                           <li>a rash on skin, or discolouration of fingers or toes</li>\r\n                                         </ul>\r\n                                       <p className=\"card-text symptoms\"><small className=\"text-muted\">Serious symptoms:</small></p>\r\n                                         <ul className=\"text-muted\">\r\n                                           <li>difficulty breathing or shortness of breath</li>\r\n                                           <li>chest pain or pressure</li>\r\n                                           <li>loss of speech or movement</li>\r\n                                         </ul>\r\n                                       <p className=\"card-text\">Seek immediate medical attention if you have serious symptoms. Always call before visiting your doctor or health facility.</p>\r\n                                       <p className=\"card-text\">People with mild symptoms who are otherwise healthy should manage their symptoms at home.</p>\r\n                                       <p className=\"card-text\">On average it takes 5–6 days from when someone is infected with the virus for symptoms to show, however it can take up to 14 days.</p>\r\n                                     </div>\r\n                                   </div>\r\n                                 </div>\r\n                                 <div className=\"modal-footer\">\r\n                                   <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Understood</button>\r\n                                 </div>\r\n                               </div>\r\n                             </div>\r\n                           </div>\r\n     \r\n                  </div>\r\n       </>\r\n       \r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import { Card, CardContent, FormControl, MenuItem, Select } from '@material-ui/core';\nimport React, { useState, useEffect } from  'react'\nimport './App.css';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport TableCountry from './TableCountry';\nimport sortedData, { prettyPrintStat } from './sortingUtil'\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css'\nimport StateWise from './StateWise';\nimport Modal from './Modal';\nimport './Modal.css'\n\n\n\n// https://disease.sh/ -> api \n// https://disease.sh/v3/covid-19/countries\n\nconst App = () =>  {\n\n  const [countries, setCountries] = useState([]);\n  const [country , setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({})\n  const [tableData, setTableDataN] = useState([])\n  const [mapCenter, setMapCenter] = useState({lat: 34.80746, lng: -40.4796})\n  const [mapZoom, setMapZoom] = useState(3)\n  const [mapCountries, setMapCountires] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\")\n  const [openModal,setOpenModal] = useState(false)\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((response) => response.json())\n    .then((data) => {\n      setCountryInfo(data);\n    })\n  },[])\n\n  useEffect(() => {\n    // https://corona.lmao.ninja/v2/countries\n  //  The code inside here runs once when the component loads and not again\n  // async -> send a request to server, wait for it, do something with it \n        const getCountriesData = async () => {\n            await fetch(\"https://disease.sh/v3/covid-19/countries\")\n            .then((response) => response.json())\n            .then((data) => {\n                const countries=  data.map((country) => ({\n                    name : country.country, //United state\n                    value : country.countryInfo.iso2,  // USA , UK , FR\n                  }\n                ) );\n\n                const sort = sortedData(data)\n                setTableDataN(sort)\n                setMapCountires(data)\n                setCountries(countries)\n              \n            } )\n        };\n        getCountriesData()\n  }, []);\n\n  console.log(tableData)\n\n  const onCountryChange = async (event) => {\n      const countryCode = event.target.value\n      // setCountry(countryCode)\n      // console.log(countryCode)\n      const url = countryCode ===\"worldwide\" \n              ? 'https://disease.sh/v3/covid-19/all'\n              :  ` https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n              // https://disease.sh/v3/covid-19/countries/USA\n\n        await fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          setCountry(countryCode)\n          setCountryInfo(data)\n\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long])\n          setMapZoom(4);\n         \n        })\n\n        \n    }\n\n      //  https://disease.sh/v3/covid-19/countries\n      // https://disease.sh/v3/covid-19/countries[COUNTRY_CODE]\n\n  return (\n            <>\n                    <div className=\"app\">\n                     {/* Header */}\n              \n                    <div className=\"app__left\">\n                        <div className=\"app__header\">\n                    \n                              <h1>COVID-19 TRACKER</h1>\n                                <FormControl className=\"app__dropdown\">\n                                      <Select  \n                                        variant=\"outlined\"    \n                                        onChange={onCountryChange}\n                                        value={country}\n                                        >\n                                          <MenuItem  value=\"worldwide\">Worldwide</MenuItem>\n                                          {\n                                              countries.map((country ) => (\n                                                <MenuItem  value={country.value}> {country.name}</MenuItem>\n                                              ) )\n                                          }\n                                      </Select>\n                                  </FormControl>\n                        </div>\n                          \n                      {/* Title + Select input dropdown field */}\n\n                      {/* InfoBoxes recoveries */}\n                      {/* InfoBoxes */}\n\n                        <div className=\"app__stats\">\n                                        {/* InfoBoxes  title =\"Coronavirus cases \" */}\n                                        <InfoBox \n                                          inRed \n                                          active ={casesType ===\"cases\"}\n                                          onClick = { (e)=> setCasesType('cases')}\n                                          title=\"Coronavirus cases\"\n                                          cases={prettyPrintStat(countryInfo.todayCases)} \n                                          total={prettyPrintStat(countryInfo.cases)}                                 \n                                         />\n                                        <InfoBox \n                                         active ={casesType ===\"recovered\"}\n                                          onClick = { (e)=> setCasesType('recovered')}\n                                          title=\"Recovered \" \n                                          cases={prettyPrintStat(countryInfo.todayRecovered)} \n                                          total={prettyPrintStat(countryInfo.recovered)}\n                                        />\n                                        <InfoBox \n                                          isRed\n                                          active ={casesType ===\"deaths\"}\n                                          onClick = { (e)=> setCasesType('deaths')}\n                                          title=\"Deaths\" \n                                          cases={prettyPrintStat(countryInfo.todayDeaths)} \n                                          total={prettyPrintStat(countryInfo.deaths)}\n                                         />\n                        </div>\n                 \n                      {/* Map */}\n\n                    <Map\n                      casesType={casesType}\n                      countries={mapCountries}\n                      center ={mapCenter}\n                      zoom = {mapZoom}\n                    />\n\n                  </div>\n\n                      <Card className=\"app__right\">\n                          <CardContent>\n                          <h3>Live Cases By country</h3>\n                              {/* Table */}\n                          <TableCountry countries={tableData}/>\n                                {/* Graph */}\n                            <h3 className='app__graphTitle'>Worldwide new  {casesType} </h3>\n                            <LineGraph  className=\"app__graph\" casesType={casesType}/>\n                          </CardContent>\n                      </Card>\n\n                </div>\n\n                <div className=\"app__states\">\n                        <StateWise/>\n                  </div>\n\n                \n                 <div>\n                    <div className=\"covid-button\">\n                        <button type=\"button\" className=\"btn btn-primary mb-2\" data-toggle=\"modal\" data-target=\"#exampleModal\" \n                            onClick={()=> {\n                              setOpenModal(true);\n                            }}>\n                          COVID Symptoms\n                        </button>         \n                      </div>\n                   {openModal && <Modal closeModal={setOpenModal} />}\n                 </div>\n\n            </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}